{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/layout.js"],"names":["Projects","classes","makeStyles","theme","root","flexGrow","container","display","flexWrap","paper","padding","spacing","textAlign","color","palette","text","secondary","flex","margin","useStyles","item","lg","className","href","Layout","children","data","transition","borderRadius","transform","root_R","grid","marginTop","avatar","newDate","Date","getDate","getMonth","getFullYear","getHours","getMinutes","createMuiTheme","responsiveFontSizes","css","rhythm","name","content","mdDown","aria-label","alt","src","file","childImageSharp","fluid","srcWebp","titleTypographyProps","variant","title","site","siteMetadata","pro_title","subheader","pro_subheader"],"mappings":"6FAAA,yHASe,SAASA,IAEtB,IAgBMC,EAhBYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,UAAW,CACTC,QAAS,OACTC,SAAU,QAEZC,MAAO,CACLC,QAASP,EAAMQ,QAAQ,GACvBC,UAAW,SACXC,MAAOV,EAAMW,QAAQC,KAAKC,UAC1BC,KAAM,WACNC,OAAQf,EAAMQ,QAAQ,OAGVQ,GAEhB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GACT,YAAC,IAAD,CAAOC,UAAWrB,EAAQQ,OAC1B,yEACA,qBACJ,iBAAGc,KAAK,yBAAR,wB,oRCNO,SAASC,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SACzBC,EAAI,OA4DJzB,EAtCYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVsB,WAAY,gBACZ,UAAW,CACTC,aAAc,KACdC,UAAW,gBAGfC,OAAQ,CACNzB,SAAU,EACVsB,WAAY,gBACZ,UAAW,CACTC,aAAc,KACdC,UAAW,gBAGfvB,UAAW,CACTC,QAAS,OACTC,SAAU,QAEZC,MAAO,CACLC,QAASP,EAAMQ,QAAQ,GACvBC,UAAW,SACXC,MAAOV,EAAMW,QAAQC,KAAKC,UAC1BC,KAAM,WACNC,OAAQf,EAAMQ,QAAQ,IAExBoB,KAAK,CACHC,UAAW,IAEbC,OAAO,CACL1B,QAAS,OACT,QAAS,CACPW,OAAQf,EAAMQ,QAAQ,QAIZQ,GAEZe,EAAU,IAAIC,KAOdhC,GANO+B,EAAQE,UACPF,EAAQG,WACTH,EAAQI,cACRJ,EAAQK,WACNL,EAAQM,aAETC,eAGZ,OAFAtC,EAAQuC,YAAoBvC,GAG1B,mBACEwC,IAAKA,YAAF,8CAGcC,YAAO,KAHrB,MAMH,YAAC,IAAD,MAEF,YAAC,IAAD,KACE,oBAAMC,KAAK,cAAcC,QAAQ,aAEjC,mBAAKxB,UAAWrB,EAAQK,WACxB,YAAC,IAAD,CAAeH,MAAOA,GACpB,YAAC,IAAD,CAAQ4C,QAAM,GACZ,YAAC,IAAD,CAAM3B,MAAI,EAACC,GAAI,EAAGC,UAAWrB,EAAQ8B,MACrC,YAAC,IAAD,CAAMT,UAAWrB,EAAQG,MACvB,YAAC,IAAD,SAOHqB,EAED,YAAC,IAAD,CAAQsB,QAAM,GACZ,YAAC,IAAD,CAAM3B,MAAI,EAACC,GAAI,EAAGC,UAAWrB,EAAQ8B,MACnC,YAAC,IAAD,CAAMT,UAAWrB,EAAQ6B,QACzB,YAAC,IAAD,CACEG,OACE,YAAC,IAAD,CAAQe,aAAW,UACnB1B,UAAWrB,EAAQgC,OACnBgB,IAAI,UACJC,IAAKxB,EAAKyB,KAAKC,gBAAgBC,MAAMC,UAGvCC,qBAAsB,CAACC,QAAQ,aAC/BC,MAAO/B,EAAKgC,KAAKC,aAAaC,UAC9BC,UAAanC,EAAKgC,KAAKC,aAAaG,wB","file":"component---src-pages-projects-js-b82186db7de13f5c06e6.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function Projects() {\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n      flex: '1 0 auto',\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Layout>\r\n      <Grid item lg={6}>\r\n            <Paper className={classes.paper}>\r\n            <h1>I'd love to talk! Email me at the address below</h1>\r\n            <p>\r\n        <a href=\"mailto:me@example.com\">me@example.com</a>\r\n      </p>\r\n            </Paper>\r\n      </Grid>\r\n\r\n\r\n    </Layout>\r\n  )\r\n}","import React from \"react\"\r\n\r\nimport ButtonAppBar from \"./header\"\r\nimport ProfileCard from \"./profilecard\"\r\n\r\nimport { useStaticQuery,graphql, Link } from \"gatsby\"\r\nimport { css } from \"@emotion/core\"\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nexport default function Layout({ children }) {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      file(relativePath: {eq: \"my_image.jpg\"}) {\r\n        childImageSharp {\r\n          fluid {\r\n            srcWebp\r\n            tracedSVG\r\n          }\r\n        }\r\n      }\r\n      site {\r\n        siteMetadata {\r\n          pro_title\r\n          pro_subheader\r\n        }\r\n      }\r\n      allMarkdownRemark {\r\n        totalCount\r\n      }\r\n    }\r\n    `\r\n  )\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,     \r\n      transition: \"transform .2s\",\r\n      '&:hover': {\r\n        borderRadius: \"2%\",\r\n        transform: \"scale(1.05)\",\r\n      },     \r\n    },\r\n    root_R: {\r\n      flexGrow: 1,\r\n      transition: \"transform .2s\",\r\n      '&:hover': {\r\n        borderRadius: \"2%\",\r\n        transform: \"scale(1.05)\",\r\n      },     \r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n      flex: '1 0 auto',\r\n      margin: theme.spacing(1),\r\n    },\r\n    grid:{\r\n      marginTop: 15,\r\n    },\r\n    avatar:{\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n \r\n  let newDate = new Date()\r\n  let date = newDate.getDate();\r\n  let month = newDate.getMonth() + 1;\r\n  let year = newDate.getFullYear();\r\n  let hour = newDate.getHours()\r\n  let minute = newDate.getMinutes()\r\n\r\n  let theme = createMuiTheme();\r\n  theme = responsiveFontSizes(theme);\r\n\r\n  return (\r\n    <div\r\n      css={css`\r\n        margin: 0 auto;\r\n        max-width: 1300px;\r\n        padding-top: ${rhythm(1.5)};\r\n      `}\r\n    >\r\n      <ButtonAppBar/>\r\n\r\n    <Helmet>\r\n      <meta name=\"theme-color\" content=\"#3498DB\"/>\r\n    </Helmet>\r\n      <div className={classes.container}>\r\n      <ThemeProvider theme={theme}>\r\n        <Hidden mdDown>\r\n          <Grid item lg={3} className={classes.grid}>\r\n          <Card className={classes.root}>\r\n            <ProfileCard/>\r\n           </Card>\r\n          </Grid>\r\n        </Hidden>\r\n        \r\n\r\n\r\n        {children}\r\n        \r\n        <Hidden mdDown>\r\n          <Grid item lg={3} className={classes.grid}>\r\n            <Card className={classes.root_R}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar aria-label=\"profile\" \r\n                className={classes.avatar} \r\n                alt=\"profile\" \r\n                src={data.file.childImageSharp.fluid.srcWebp} \r\n                />\r\n              }\r\n              titleTypographyProps={{variant:'subtitle1'}}\r\n              title={data.site.siteMetadata.pro_title}\r\n              subheader = {data.site.siteMetadata.pro_subheader}\r\n            />\r\n            </Card>\r\n          </Grid>\r\n        </Hidden>\r\n      </ThemeProvider>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}