{"version":3,"sources":["webpack:///./src/templates/blogTemplate.js"],"names":["Template","markdownRemark","data","frontmatter","html","className","title","date","tags","map","tag","to","kebabCase","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"4FAAA,gKAUe,SAASA,EAAT,GAEX,IACMC,EADP,EADDC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,YAAC,IAAD,KACA,mBAAKC,UAAU,uBACb,mBAAKA,UAAU,aACb,sBAAKF,EAAYG,OACjB,sBAAKH,EAAYI,MACf,sBACCJ,EAAYK,KAAKC,KAAI,SAAAC,GAAG,OACrB,YAAC,IAAD,CACAC,GAAE,SAAaC,IAAUF,GAAvB,KACF,sBAAKA,QAIX,mBACEL,UAAU,oBACVQ,wBAAyB,CAAEC,OAAQV,QAStC,IAAMW,EAAS","file":"component---src-templates-blog-template-js-b81ebd5e8fcc9bd37966.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\n\r\n// Utilities\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\n// Components\r\nimport { graphql,Link } from \"gatsby\"\r\n\r\n\r\nexport default function Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n}) {\r\n  const { markdownRemark } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, html } = markdownRemark\r\n  return (\r\n    <Layout>\r\n    <div className=\"blog-post-container\">\r\n      <div className=\"blog-post\">\r\n        <h1>{frontmatter.title}</h1>\r\n        <h2>{frontmatter.date}</h2>\r\n          <ul>  \r\n          {frontmatter.tags.map(tag => (\r\n              <Link\r\n              to = {`/tags/${kebabCase(tag)}/`}>\r\n              <li>{tag}</li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        <div\r\n          className=\"blog-post-content\"\r\n          dangerouslySetInnerHTML={{ __html: html }}\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($url_path: String!) {\r\n    markdownRemark(frontmatter: { url_path: { eq: $url_path } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        url_path\r\n        title\r\n        tags\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}