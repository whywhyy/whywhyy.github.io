{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/templates/tags.js","webpack:///./node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js"],"names":["Layout","children","data","classes","makeStyles","theme","root","flexGrow","transition","marginRight","borderRadius","transform","root_R","marginLeft","container","display","flexWrap","paper","padding","spacing","textAlign","color","palette","text","secondary","flex","margin","grid","marginTop","avatar","useStyles","createMuiTheme","responsiveFontSizes","css","rhythm","className","mdDown","item","lg","aria-label","alt","src","file","childImageSharp","fluid","srcWebp","titleTypographyProps","variant","title","site","siteMetadata","pro_title","subheader","pro_subheader","card","maxWidth","card_header","marginBottom","cardmedia","objectFit","card_array","backgroundColor","all_tags","alignItems","fontWeight","tags","justifyContent","textbody","flexFlow","text_date","text_readtime","text_tag","fontSize","tag_num","height","width","verticalAlign","thumbnail_img","Tags","pageContext","tag","allMarkdownRemark","edges","totalCount","tagHeader","xs","direction","justify","gutterBottom","paragraph","component","subheaderTypographyProps","to","map","node","frontmatter","url_path","date","fields","readingTime","kebabCase","pageQuery","CardActionArea","props","ref","focusVisibleClassName","other","focusVisible","focusHighlight","opacity","action","hoverOpacity","overflow","pointerEvents","position","top","right","bottom","left","transitions","create","duration","name"],"mappings":"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","file":"component---src-templates-tags-js-e1a31fa102dd52c1ac86.js","sourcesContent":["import React from \"react\"\r\n\r\nimport ButtonAppBar from \"./header\"\r\nimport ProfileCard from \"./profilecard\"\r\nimport Footer from \"./footer\"\r\n\r\nimport { useStaticQuery,graphql} from \"gatsby\"\r\nimport { css } from \"@emotion/core\"\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\n\r\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nexport default function Layout({ children }) {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      file(relativePath: {eq: \"my_image.jpg\"}) {\r\n        childImageSharp {\r\n          fluid {\r\n            srcWebp\r\n            tracedSVG\r\n          }\r\n        }\r\n      }\r\n      site {\r\n        siteMetadata {\r\n          pro_title\r\n          pro_subheader\r\n        }\r\n      }\r\n      allMarkdownRemark {\r\n        totalCount\r\n      }\r\n    }\r\n    `\r\n  )\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,     \r\n      transition: \"transform .2s\",\r\n      marginRight:10,\r\n      '&:hover': {\r\n        borderRadius: \"2%\",\r\n        transform: \"scale(1.05)\",\r\n      },\r\n    },\r\n    root_R: {\r\n      flexGrow: 1,\r\n      transition: \"transform .2s\",\r\n      marginLeft:10,\r\n      '&:hover': {\r\n        borderRadius: \"2%\",\r\n        transform: \"scale(1.05)\",\r\n      },     \r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n      flex: '1 0 auto',\r\n      margin: theme.spacing(1),\r\n    },\r\n    grid:{\r\n      marginTop: 15,\r\n    },\r\n    avatar:{\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n\r\n  let theme = createMuiTheme();\r\n  theme = responsiveFontSizes(theme);\r\n\r\n  return (\r\n    <div>\r\n    <div\r\n      css={css`\r\n        margin: 0 auto;\r\n        max-width: 1300px;\r\n        min-height: 100vh;\r\n        padding-top: ${rhythm(1.5)};\r\n      `}\r\n    >\r\n      <ButtonAppBar/>\r\n\r\n\r\n      <div className={classes.container}>\r\n      <ThemeProvider theme={theme}>\r\n        <Hidden mdDown>\r\n          <Grid item lg={3} className={classes.grid}>\r\n          <Card className={classes.root}>\r\n            <ProfileCard/>\r\n           </Card>\r\n          </Grid>\r\n        </Hidden>\r\n        \r\n\r\n\r\n        {children}\r\n        \r\n        <Hidden mdDown>\r\n          <Grid item lg={3} className={classes.grid}>\r\n            <Card className={classes.root_R}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar aria-label=\"profile\" \r\n                className={classes.avatar} \r\n                alt=\"profile\" \r\n                src={data.file.childImageSharp.fluid.srcWebp} \r\n                />\r\n              }\r\n              titleTypographyProps={{variant:'subtitle1'}}\r\n              title={data.site.siteMetadata.pro_title}\r\n              subheader = {data.site.siteMetadata.pro_subheader}\r\n            />\r\n            </Card>\r\n          </Grid>\r\n        </Hidden>\r\n      </ThemeProvider>\r\n      </div>\r\n      \r\n    </div>\r\n    <Footer/>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\n// Utilities\r\nimport kebabCase from \"lodash/kebabCase\"\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\n// Components\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  card: {\r\n    flexGrow: 1,\r\n    margin: 10,\r\n    marginTop: 15,\r\n    maxWidth: 650, \r\n  },\r\n  card_header:{\r\n    marginBottom:-15,\r\n  },\r\n  cardmedia:{\r\n    borderRadius: \"2%\",\r\n    objectFit: \"cover\",\r\n  },\r\n  card_array:{\r\n    marginTop:10,\r\n    '&:hover': {\r\n      color:\"#696969\",\r\n      backgroundColor:\"#CEE7F7\",\r\n    },\r\n  },\r\n  all_tags:{\r\n    padding:\".3rem .8rem\",\r\n    alignItems: \"center\",\r\n    color:\"white\",\r\n    backgroundColor:\"black\",\r\n    fontWeight: \"300\",\r\n    borderRadius:\".3rem\",\r\n    transition: \"background-color .3s\", \r\n  },   \r\n  tags:{\r\n    marginTop:10,\r\n    marginRight:10,\r\n    padding:\".1rem .3rem\",\r\n    display:\"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"right\",\r\n    color:\"#696969\",\r\n    fontWeight: \"300\",\r\n    backgroundColor:\"#D3D3D3\",\r\n    borderRadius:\".2rem\",\r\n    transition: \"background-color .3s\", \r\n    '&:hover': {\r\n      color:\"#696969\",\r\n      backgroundColor:\"\t#FFFFFF\",\r\n    },\r\n  },\r\n  textbody:{\r\n    display:\"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"left\",\r\n    flexFlow: \"row wrap\",\r\n  },\r\n  text_date:{\r\n    display:\"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"left\",\r\n    flexFlow: \"row wrap\",\r\n    color:\"#808080\",\r\n  },\r\n  text_readtime:{\r\n    display:\"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"left\",\r\n    flexFlow: \"row wrap\",\r\n    color:\"#808080\",\r\n  },\r\n  text_tag:{\r\n    display:\"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"left\",\r\n    flexFlow: \"row wrap\",\r\n    fontSize: \".7rem\",\r\n  },\r\n  tag_num:{\r\n    backgroundColor:\"#D9DDDC\",\r\n    borderRadius:\"50%\",\r\n    height: \"1.0rem\",\r\n    width: \"1.0rem\",\r\n    textAlign: \"center\",\r\n    verticalAlign: \"middle\",\r\n    fontSize:\".7rem\",\r\n    marginRight:\"0.3rem\",\r\n  },\r\n  grid:{\r\n    marginTop:10,\r\n  },\r\n  thumbnail_img:{\r\n    borderRadius: \"3%\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n  const classes = useStyles();\r\n  const { tag } = pageContext\r\n  const { edges, totalCount } = data.allMarkdownRemark\r\n  const tagHeader = `${totalCount} post${\r\n    totalCount === 1 ? \"\" : \"s\"\r\n  } tagged with \"${tag}\"`\r\n  \r\n  return (\r\n      <Layout>\r\n        <SEO \r\n          title={`${tag} tag`}\r\n        />\r\n        <Grid item xs={12} lg={6}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Card className={classes.card}>\r\n            <Typography gutterBottom paragraph variant=\"body2\" component=\"p\">\r\n            <CardHeader\r\n              subheaderTypographyProps={{variant:'subtitle2'}}\r\n              subheader = {<Link to=\"/tags\" className={classes.all_tags}>View all tags</Link>}\r\n              titleTypographyProps={{variant:'subtitle1',gutterBottom:'true' }}\r\n              title={tagHeader}\r\n              className={classes.card_header}\r\n            />\r\n          {edges.map(({ node }) => {\r\n            const { url_path, title, date, tags } = node.frontmatter\r\n            return (\r\n              \r\n                <Link \r\n                  to={url_path}\r\n                >\r\n                <CardActionArea className={classes.card_array}>\r\n                  <CardContent >\r\n                    <Typography className={classes.textbody} variant=\"h5\" component=\"h2\">\r\n                      {title}\r\n                    </Typography>\r\n                    <Typography  className={classes.text_date} variant=\"body2\" component=\"p\">\r\n                      {date}\r\n                      <Typography gutterBottom paragraph className={classes.text_readtime} variant=\"body2\" component=\"p\">\r\n                          {\",  \"}{node.fields.readingTime.text}\r\n                      </Typography>\r\n                    </Typography>\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"flex-start\"\r\n                  >\r\n                    <Typography gutterBottom paragraph className={classes.text_tag} variant=\"body2\" component=\"p\">\r\n                      {tags.map((tag) => (\r\n                        <Grid item >\r\n                          <Link \r\n                            to={`/tags/${kebabCase(tag)}/`}\r\n                            className={classes.tags} \r\n                          >\r\n                              {tag}\r\n                          </Link>\r\n                        </Grid>\r\n                      ))}\r\n                    </Typography>\r\n                  </Grid>\r\n                </CardContent>\r\n              </CardActionArea>\r\n  \r\n\r\n\r\n                </Link>\r\n             \r\n            )\r\n          })}\r\n              </Typography>\r\n          </Card>\r\n          </Grid>\r\n        </Grid>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nTags.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }),\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      totalCount: PropTypes.number.isRequired,\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              title: PropTypes.string.isRequired,\r\n              url_path: PropTypes.string.isRequired,\r\n            \r\n              tags: PropTypes.arrayOf(PropTypes.string),\r\n            }),\r\n            fields: PropTypes.shape({\r\n              readingTime : PropTypes.shape({\r\n                text : PropTypes.string.isRequired,\r\n              }),\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] }, publish: {eq: true} } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            url_path\r\n            tags\r\n            date\r\n          }\r\n          fields {\r\n            readingTime {\r\n              text\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration[\"short\"]\n      })\n    }\n  };\n};\nvar CardActionArea = React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);"],"sourceRoot":""}