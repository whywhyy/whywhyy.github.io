{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/tags.js"],"names":["Layout","children","data","classes","makeStyles","theme","root","flexGrow","transition","borderRadius","transform","root_R","container","display","flexWrap","paper","padding","spacing","textAlign","color","palette","text","secondary","flex","margin","grid","marginTop","avatar","useStyles","createMuiTheme","responsiveFontSizes","css","rhythm","className","mdDown","item","lg","aria-label","alt","src","file","childImageSharp","fluid","srcWebp","titleTypographyProps","variant","title","site","siteMetadata","pro_title","subheader","pro_subheader","TagsPage","group","allMarkdownRemark","card","maxWidth","card_header","marginBottom","tags","marginLeft","alignItems","justifyContent","fontWeight","backgroundColor","tag_num","height","width","verticalAlign","fontSize","marginRight","xs","direction","justify","gutterBottom","paragraph","component","subheaderTypographyProps","map","tag","to","kebabCase","fieldValue","totalCount","pageQuery"],"mappings":"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","file":"component---src-pages-tags-js-128be8a319d7cead0966.js","sourcesContent":["import React from \"react\"\r\n\r\nimport ButtonAppBar from \"./header\"\r\nimport ProfileCard from \"./profilecard\"\r\nimport Footer from \"./footer\"\r\n\r\nimport { useStaticQuery,graphql} from \"gatsby\"\r\nimport { css } from \"@emotion/core\"\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\n\r\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nexport default function Layout({ children }) {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      file(relativePath: {eq: \"my_image.jpg\"}) {\r\n        childImageSharp {\r\n          fluid {\r\n            srcWebp\r\n            tracedSVG\r\n          }\r\n        }\r\n      }\r\n      site {\r\n        siteMetadata {\r\n          pro_title\r\n          pro_subheader\r\n        }\r\n      }\r\n      allMarkdownRemark {\r\n        totalCount\r\n      }\r\n    }\r\n    `\r\n  )\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,     \r\n      transition: \"transform .2s\",\r\n      '&:hover': {\r\n        borderRadius: \"2%\",\r\n        transform: \"scale(1.05)\",\r\n      },     \r\n    },\r\n    root_R: {\r\n      flexGrow: 1,\r\n      transition: \"transform .2s\",\r\n      '&:hover': {\r\n        borderRadius: \"2%\",\r\n        transform: \"scale(1.05)\",\r\n      },     \r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n      flex: '1 0 auto',\r\n      margin: theme.spacing(1),\r\n    },\r\n    grid:{\r\n      marginTop: 15,\r\n    },\r\n    avatar:{\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n\r\n  let theme = createMuiTheme();\r\n  theme = responsiveFontSizes(theme);\r\n\r\n  return (\r\n    <div>\r\n    <div\r\n      css={css`\r\n        margin: 0 auto;\r\n        max-width: 1300px;\r\n        min-height: 100vh;\r\n        padding-top: ${rhythm(1.5)};\r\n      `}\r\n    >\r\n      <ButtonAppBar/>\r\n\r\n\r\n      <div className={classes.container}>\r\n      <ThemeProvider theme={theme}>\r\n        <Hidden mdDown>\r\n          <Grid item lg={3} className={classes.grid}>\r\n          <Card className={classes.root}>\r\n            <ProfileCard/>\r\n           </Card>\r\n          </Grid>\r\n        </Hidden>\r\n        \r\n\r\n\r\n        {children}\r\n        \r\n        <Hidden mdDown>\r\n          <Grid item lg={3} className={classes.grid}>\r\n            <Card className={classes.root_R}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar aria-label=\"profile\" \r\n                className={classes.avatar} \r\n                alt=\"profile\" \r\n                src={data.file.childImageSharp.fluid.srcWebp} \r\n                />\r\n              }\r\n              titleTypographyProps={{variant:'subtitle1'}}\r\n              title={data.site.siteMetadata.pro_title}\r\n              subheader = {data.site.siteMetadata.pro_subheader}\r\n            />\r\n            </Card>\r\n          </Grid>\r\n        </Hidden>\r\n      </ThemeProvider>\r\n      </div>\r\n      \r\n    </div>\r\n    <Footer/>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\n// Utilities\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\n// Components\r\n\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nexport default function TagsPage ({\r\n  data: {\r\n    allMarkdownRemark: { group },\r\n    site: {\r\n      siteMetadata: { title },\r\n    }\r\n  }\r\n}){\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    card: {\r\n      flexGrow: 1,\r\n      margin: 10,\r\n      marginTop: 15,\r\n      maxWidth: 650,\r\n      transform: \"scale(1)\",\r\n      transition: \"transform .2s\",\r\n      borderRadius: \"3%\",\r\n      '&:hover': {\r\n        borderRadius: \"3%\",\r\n        transform: \"scale(1.05)\",\r\n      },        \r\n    },\r\n    card_header:{\r\n      marginBottom:-15,\r\n    },    \r\n    tags:{\r\n      marginLeft:10,\r\n      marginTop:10,\r\n      padding:\".2rem .5rem\",\r\n      display:\"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"right\",\r\n      color:\"#696969\",\r\n      fontWeight: \"300\",\r\n      backgroundColor:\"#D3D3D3\",\r\n      borderRadius:\".8rem\",\r\n      transition: \"background-color .3s\", \r\n      '&:hover': {\r\n        color:\"#696969\",\r\n        backgroundColor:\"#CEE7F7\",\r\n      },\r\n    },\r\n    tag_num:{\r\n      backgroundColor:\"#D9DDDC\",\r\n      borderRadius:\"50%\",\r\n      height: \"1.0rem\",\r\n      width: \"1.0rem\",\r\n      textAlign: \"center\",\r\n      verticalAlign: \"middle\",\r\n      fontSize:\".7rem\",\r\n      marginRight:\"0.3rem\",\r\n    },\r\n    grid:{\r\n      marginTop:10,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n\r\n    return (    \r\n      <Layout>\r\n        <SEO \r\n          title={`Tags`}\r\n        />\r\n        <Grid item xs={12} lg={6}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Card className={classes.card} >\r\n            <Typography gutterBottom paragraph variant=\"body2\" component=\"p\">\r\n            <CardHeader\r\n              subheaderTypographyProps={{variant:'subtitle2'}}\r\n              subheader = {`Tags`}\r\n              className={classes.card_header}\r\n            />\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"flex-start\"\r\n                className={classes.grid}\r\n              >\r\n                {group.map(tag => (\r\n                    <Link \r\n                      to={`/tags/${kebabCase(tag.fieldValue)}/`}\r\n                      className={classes.tags}\r\n                    >\r\n                    <sapn className={classes.tag_num}> {tag.totalCount}</sapn> \r\n                    {tag.fieldValue}\r\n                    </Link>\r\n                ))}\r\n              </Grid>\r\n              </Typography>\r\n          </Card>\r\n          </Grid>\r\n        </Grid>\r\n    </Layout>\r\n    )\r\n  }\r\n\r\n\r\nTagsPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      group: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          fieldValue: PropTypes.string.isRequired,\r\n          totalCount: PropTypes.number.isRequired,\r\n        }).isRequired\r\n      ),\r\n    }),\r\n    site: PropTypes.shape({\r\n      siteMetadata: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n      }),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 2000, filter: {frontmatter: {publish: {eq: true}}}) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}