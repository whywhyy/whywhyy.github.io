{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","webpack:///./src/templates/blogTemplate.js"],"names":["MEDIA_COMPONENTS","CardMedia","props","ref","children","classes","className","_props$component","component","Component","image","src","style","other","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","root","media","img","undefined","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","name","Template","markdownRemark","data","frontmatter","html","fields","makeStyles","margin","maxWidth","cardmedia","borderRadius","transform","cardcontent","marginTop","textbody","alignItems","justifyContent","flexFlow","padding","border","text_date","color","text_readtime","tags","marginRight","fontWeight","backgroundColor","transition","useStyles","theme","createMuiTheme","responsiveFontSizes","container","direction","justify","xs","lg","variant","title","date","gutterBottom","paragraph","readingTime","text","map","tag","item","to","kebabCase","alt","height","thumbnailImage","childImageSharp","fluid","srcWebp","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"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","file":"component---src-templates-blog-template-js-321fd043027f763825a1.js","sourcesContent":["import \"core-js/modules/es6.array.index-of\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\n\r\n// Utilities\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\r\n\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\n\r\n// Components\r\nimport { graphql,Link } from \"gatsby\"\r\n\r\n\r\nexport default function Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n}) {\r\n  const { markdownRemark } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, html, fields } = markdownRemark\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      margin: 15,\r\n      maxWidth: 650,\r\n    },\r\n    cardmedia:{\r\n      margin: \"0 10% 0 10\",\r\n      borderRadius: \"2%\",\r\n      objectFit: \"cover\",\r\n      transform: \"scale(0.95)\",\r\n    },\r\n    cardcontent:{\r\n      marginTop: \"-5%\",\r\n    },\r\n    textbody:{\r\n      display:\"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"left\",\r\n      flexFlow: \"row wrap\",\r\n      padding: \"0.5em\",\r\n      border: \"none\",\r\n    },\r\n    text_date:{\r\n      display:\"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"left\",\r\n      flexFlow: \"row wrap\",\r\n      padding: \"0.5em\",\r\n      color:\"#808080\",\r\n    },\r\n    text_readtime:{\r\n      display:\"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"left\",\r\n      flexFlow: \"row wrap\",\r\n      color:\"#808080\",\r\n    },\r\n    tags:{\r\n      marginTop:10,\r\n      marginRight:10,\r\n      padding:\".2rem .5rem\",\r\n      display:\"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"right\",\r\n      color:\"#696969\",\r\n      fontWeight: \"300\",\r\n      backgroundColor:\"#D3D3D3\",\r\n      borderRadius:\".2rem\",\r\n      transition: \"background-color .3s\", \r\n      '&:hover': {\r\n        color:\"#696969\",\r\n        backgroundColor:\"#CEE7F7\",\r\n      },\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  \r\n  let theme = createMuiTheme();\r\n  theme = responsiveFontSizes(theme);\r\n\r\n  return (\r\n    <Layout>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"flex-start\" \r\n          xs={12} lg={6} \r\n          >\r\n            <ThemeProvider theme={theme}>\r\n            <Card className={classes.root}>\r\n              <CardContent>\r\n                <Typography className={classes.textbody} variant=\"h4\" component=\"h2\">\r\n                  {frontmatter.title}\r\n                </Typography>\r\n\r\n                <Typography  className={classes.text_date} variant=\"body2\" component=\"p\">\r\n                   {frontmatter.date}\r\n                    <Typography gutterBottom paragraph className={classes.text_readtime} variant=\"body2\" component=\"p\">\r\n                        {\",  \"}{fields.readingTime.text}\r\n                    </Typography>\r\n                </Typography>\r\n\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  <Typography gutterBottom paragraph className={classes.textbody} variant=\"body2\" component=\"p\">\r\n                    {frontmatter.tags.map((tag) => (\r\n                      <Grid item >\r\n                        <Link \r\n                          to={`/tags/${kebabCase(tag)}/`}\r\n                          className={classes.tags}\r\n                        >\r\n                          {tag}{\" \"}\r\n                        </Link>\r\n                      </Grid>\r\n                    ))}\r\n                  </Typography>\r\n                </Grid>\r\n\r\n\r\n\r\n                \r\n              </CardContent>\r\n              <CardMedia\r\n                className={classes.cardmedia}\r\n                component=\"img\"\r\n                alt=\"이미지를 불러오지 못했습니다..ㅠㅠ\"\r\n                height=\"400\"\r\n                image={frontmatter.thumbnailImage.childImageSharp.fluid.srcWebp} \r\n                title={frontmatter.title}\r\n              />\r\n              <CardContent \r\n              className={classes.cardcontent}\r\n              >\r\n              <div\r\n                className=\"blog-post-content\"\r\n                dangerouslySetInnerHTML={{ __html: html }}\r\n              />\r\n              </CardContent>\r\n            </Card>\r\n          </ThemeProvider>\r\n      </Grid>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($url_path: String!) {\r\n    markdownRemark(frontmatter: { url_path: { eq: $url_path } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD,YYYY\")\r\n        url_path\r\n        title\r\n        tags\r\n        thumbnailImage {\r\n          childImageSharp {\r\n            fluid {\r\n              srcWebp\r\n            }\r\n          }\r\n        }\r\n      }\r\n      fields {\r\n        readingTime {\r\n          text\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}